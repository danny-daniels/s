Title: Data Wrangling: I Perform the following operations using Python on any open source
dataset (e.g., data.csv)
1. Import all the required Python Libraries.
2. Locate an open source data from the web (e.g., https://www.kaggle.com). Provide a clear
description of the data and its source (i.e., URL of the web site).
3. Load the Dataset into pandas dataframe.
4. Data Preprocessing: check for missing values in the data using pandas isnull(), describe()
function to get some initial statistics. Provide variable descriptions. Types of variables etc. Check
the dimensions of the data frame.
5. Data Formatting and Data Normalization: Summarize the types of variables by checking the
data types (i.e., character, numeric, integer, factor, and logical) of the variables in the data set. If
variables are not in the correct data type, apply proper type conversions.
6. Turn categorical variables into quantitative variables in Python. In addition to the codes and
outputs, explain every operation that you do in the above steps and explain everything that you
do to import/read/scrape the data set.


import pandas as pd
data=pd.read_csv("ass1.csv")
df=pd.DataFrame(data)
df

df.head()
df.tail()
df.isnull()
df.describe()

#Reshaping
df['Variable']=df['Variable'].map({'Seasonally adjusted':0,'Actual':1}).astype(float)
df
#Filtering
df=df[df['Data_value']>=12567]
df=df.drop(['Gas'],axis=1)
df 
#Wrangling data by removing Duplication:
non_duplicate = df[~df.duplicated('Anzsic_description')]
non_duplicate

#Wrangling Data Using Merge Opration

stud_detail=pd.DataFrame({
    'Id':['101','102','103','104','105','106','107','108','109','110'],
    'Name':['Sanket','Priya','Prajwal','Rushikesh','Diya','Vivek','Athrva','Rutuja','Pooja','Ravi'],
    'Gender':['M','F','M','M','F','M','M','F','F','M']
})
stud_marks=pd.DataFrame({
    'Id':['101','102','103','104','105','106','107','108','109','110'],
    'Marks':[50,67,70,84,45,77,67,85,96,79]
})
print(pd.merge(stud_detail, stud_marks, on='Id')) #merge

#Wrangling Data Using Grouping Method
stud_db={
    'Name':['Sanket','Sanket','Rushikesh','Vivek','Vivek','Rushikesh','Sanket','Prajwal','Prajwal','Athrav'],
    'Subject':['DSBDA','WT','WT','DSBDA','AI','DSBDA','AI','DSBDA','AI','DSBDA'],
    'Mark':[78,64,83,42,90,58,76,55,40,88]
}
df=pd.DataFrame(stud_db)
df
grouped = df.groupby('Subject')
print(grouped.get_group('DSBDA'))

#Dealing with missing values
stud_db={
    'Name':['Sanket','Sanket','Rushikesh','Vivek','Vivek','Rushikesh','Sanket','Prajwal','Prajwal','Athrav'],
    'Subject':['DSBDA','WT','WT','DSBDA','AI','DSBDA','AI','DSBDA','AI','DSBDA'],
    'Mark':[78,64,'NaN',42,90,'NaN',76,55,40,'NaN']
}
df=pd.DataFrame(stud_db)
df
c = avg = 0
for ele in df['Mark']:
    if str(ele).isnumeric():
        c += 1
        avg += ele
    avg /= c
df = df.replace(to_replace="NaN",value=avg)
df

Theory:
1.Data Wrangling: converting raw data into a usable form
Data Wrangling is the process of gathering, collecting, and transforming Raw data into another format for better understanding, decision-making, accessing, and analysis in less time.
2.Reshaping data in the Variable column, we can reshape the data by categorizing them into different numbers.
Merge operation is used to merge raw data and into the desired format.
3.Filtering data: 
Some times datasets are comprised of unwanted rows or columns which are
required to be removed or filtered

Data wrangling in python deals with the below functionalities:
1. Data exploration: In this process, the data is studied, analyzed and understood by
visualizing representations of data.
2. Dealing with missing values: Most of the datasets having a vast amount of data contain
missing values of NaN, they are needed to be taken care of by replacing them with mean,
mode, the most frequent value of the column or simply by dropping the row having
a NaN value.
3. Reshaping data: In this process, data is manipulated according to the requirements, where
new data can be added or pre-existing data can be modified.
4. Filtering data: Some times datasets are comprised of unwanted rows or columns which are
required to be removed or filtered
5. Other: After dealing with the raw dataset with the above functionalities we get an efficient
dataset as per our requirements and then it can be used for a required purpose like data
analyzing, machine learning, data visualization, model training etc.











